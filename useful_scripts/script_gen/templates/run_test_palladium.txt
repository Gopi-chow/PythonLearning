$burst_started = 0
$burst_message = ""
$dumping_trace = 0
$burst_hang = 0
$actualruntime = 0
$starttime := 'date +%s'
$endtime = 0
$trace_for_hang = 0

sleep 1

test
        # wait here until an event runs either 'fail' or 'continue'
        wait

        when <::com:=:serial::> matches "Press a key in"
        if run "[ \"$burst_started\" == \"0\" ]" then
                    print "Entering knobs"
                    print com0 "" "$BURST_KNOBS" ""
                    print "BURST started."
                    $burst_started = 1
                    $starttime := 'date +%s'
                endif
        end

        when <::com:=:serial::> matches "Cmd line knob lines: 0"
                if run "[ \"$BURST_KNOBS\" != \"\" ]" then
                        $burst_message = "Knobs didn't get passed"
                        fail "BURST failed: $burst_message"
                endif
        end

        #Check if we need to press ctrl-c to get the trace for the hang
        when <::com:=:serial::> matches "Filling memory with pattern now"
                if run "[ \"$trace_for_hang\" != \"0\" ]" then
                    print com0 "^C"
                endif
        end

        when <::com:=:serial::> matches "Failing at test: \\S+ seed \\S+ Run: \\S+"
                print "$0"
                $burst_message = $0
                $dumping_trace = 1
                $endtime := 'date +%s'
                $actualruntime := "expr $endtime - $starttime"
                print "BURST failed, run time is $actualruntime seconds"
                <::preemption_off::>
        end

        when <::com:=:serial::> matches "Type 'h' for help"
                print "Dumping trace."
                print com0 "T"
        end

        when <::com:=:serial::> matches "End of BURST dump"
                fail "BURST failed: $burst_message"
        end

        when <::com:=:serial::> matches "Start time: \\S+, end: \\S+, diff: \\S+"
                fail "BURST failed: $burst_message"
        end

        when <::com:=:serial::> matches "PLBMON dev 00 is out of range"
                fail "BURST failed: $burst_message"
        end

        # This event is called when there's inactivity. It can only run once.
        when <::com:=:serial::> inactive 30 minutes
                $burst_hang = 1
                if run "[ \"$burst_started\" != \"1\" ]" then
                        fail "BURST never started."
                else
                        run "echo burst hung >> $SERIAL_LOG"
                        run "echo burst hung. Restarting to dump trace >> $SERIAL_LOG"
                        print "BURST hang detected.Restarting to dump trace"
                        $endtime := 'date +%s'
                        $actualruntime := "expr $endtime - $starttime"
                        $dumping_trace = 1
                        fail "BURST hung. runtime is $actualruntime seconds"
                endif
        end

        # This event is called after a fixed time.
        after $BURST_RUNTIME seconds
                if run "[ \"$dumping_trace\" != \"1\" ]" then
                        print "BURST run of $BURST_RUNTIME seconds complete!"
                        continue
                endif
        end

        on failure
                print "FAILURE: $0"
        end

        always
		if run "[ \"$actualruntime\" == \"0\" ] && [ \"$dumping_trace\" == \"0\" ] " then
                       print <::com:=:serial::> "\003"
                       $endtime := 'date +%s'
                       $actualruntime := "expr $endtime - $starttime"
                       print "ctrl+c is pressed before exiting"
                        sleep 10
                       print "BURST run is preempted/terminated after $actualruntime seconds"
                endif
                <::__SUB_TEMPLATE__exit_palladium__:=:No::>
                close
        end
endtest
