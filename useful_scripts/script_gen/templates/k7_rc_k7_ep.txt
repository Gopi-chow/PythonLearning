<::preemption_off:=: ::>
cleankeys
power 0
sleep 2
power 1
sleep 2
serial baud = 115200
$K7_RC_BIT="<::rc_bup::>"
$K7_EP_BIT="<::ep_bup::>"

if run "[ ! -f $K7_RC_BIT ]" then
        fail "ERROR: Cannot find file: $K7_RC_BIT"
endif

if run "[ ! -f $K7_EP_BIT ]" then
        fail "ERROR: Cannot find file: $K7_EP_BIT"
endif

$logdate_time := 'date +%Y%m%d_%H%M'
$dir1 = "$SYSTEST_HOST"
run "mkdir -p $LOGPATH/$dir1"
$dir2 = "$logdate_time"
run "mkdir -p $LOGPATH/$SYSTEST_HOST/$dir2"
$BURST_RESULTS = "$LOGPATH/$SYSTEST_HOST/$dir2"
$WHICH_XSDB := "which xsdb"

record serial "$BURST_RESULTS/burst_serial_$SYSTEST_HOST.log"
debug "$BURST_RESULTS/burst_debug_$SYSTEST_HOST.log"

#Echo all paths and configurations
print "Printing all launch information..."
print  "Kintex_PCIe_$logdate,None,None,None,None,$K7_RC_BIT,$K7_EP_BIT,None,$BURST_ELF,$SYSTEST_HOST,$logdate1,$BURST_RUNTIME,xx,$PREEMPTABLE,IN_PROGRESS,TBD,$BURST_RESULTS,$BURST_KNOBS"

print "K7_RC_BIT       :$K7_RC_BIT"
print "K7_EP_BIT       :$K7_EP_BIT"
print "BOARD           :$SYSTEST_HOST"
print "BURST KNOBS     :$BURST_KNOBS"
print "BURST elf       :$BURST_ELF"
print "BURST runtime   :$BURST_RUNTIME seconds"
print "BURST results   :$BURST_RESULTS"
print "XSDB Version    :$WHICH_XSDB"
print "Job ID          :$LSB_JOBID"

loadmodule "2020.2_weekly_latest"
fork "xsdb" as my_xsdb
my_xsdb echo = 1

test
	sleep 5
	wait
	when my_xsdb matches "xsdb%"
		print "Forking xsdb completed"
		continue
	end
	after 2 minutes
		print "FAILURE: Forking xsdb failed"
                close
		exit
	end
endtest

print my_xsdb "connect"         # Connect to hw server
print my_xsdb "targets"         # List all cores

# Take CPU's out of reset until fix
print my_xsdb "target -set -filter {name =~ \"*xc7k325t*\" && jtag_cable_name =~ \"*Platform*\" }"
print my_xsdb "fpga -f $K7_EP_BIT"
print my_xsdb "exec sleep 5"
print my_xsdb "ta"
print my_xsdb "target -set -filter {name =~ \"*xc7k325t*\" && jtag_cable_name =~ \"*Digilent*\" }"
print my_xsdb "fpga -f $K7_RC_BIT"
print my_xsdb "exec sleep 5"
print my_xsdb "ta"
print my_xsdb "target -set -filter {name =~ \"*MicroBlaze #0*\" && jtag_cable_name =~ \"*Digilent*\"}"
print my_xsdb "stop"
print my_xsdb "rst"
print my_xsdb "dow $BURST_ELF"

test
        sleep 5
        wait
        when my_xsdb matches "Successfully downloaded .*burstmb.*"
                continue
        end
        when my_xsdb matches "Failed to download .*burstmb.*"
                fail "BURST elf download failed"
        end
        when my_xsdb inactive 2 minutes
                fail "BURST not started"
        end
        on failure
                print "FAILURE: $0"
                close
                exit
        end
endtest

print my_xsdb "exec sleep 5"
<::preemption_on:=: ::>
print my_xsdb "con"
print my_xsdb "exit"

