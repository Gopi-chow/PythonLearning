<::preemption_off:=: ::>
serial baud = 115200

$PROCESSOR = "<::proc::>"
$BURST_KNOBS := 'echo $BURST_KNOBS | sed -e "s/,/;/g"'
$BURST_BUP= "/group/siv_burst/proj/alto/vnc/4.0/da7/results/fourth_silicon/bup/zc1751_21X_PL100_AXIEX125_DP300_DC1/implementation/project_1.runs/impl_1/top.bit"
$FSBL_ELF= "/group/siv3/proj/ronaldo/vnc/4.0/da7/results/burst/fourth_silicon/fsbl/<::fsbl_elf:=:fsbl_da7_zc165x_burst_165x_av_sd100_schm_lpddr4_man2400_04182017/fsbl_a53_64/fsbl_a53_64.elf::>"
$DDR_INIT_TCL = "<::ddr_init:=:NO::>"
$dir1 = "$SYSTEST_HOST"
run "mkdir -p $LOGPATH/$dir1"
$dir2 = "$logdate"
run "mkdir -p $LOGPATH/$SYSTEST_HOST/$dir2"        
$BURST_RESULTS = "$LOGPATH/$SYSTEST_HOST/$dir2"
$LOGFILE = "$BURST_RESULTS/burst_serial_$SYSTEST_HOST.log"
$WHICH_XSDB := "which xsdb"

######################################################################

#Enable CSU
$HW_SERVER_SHOW_CSU="1"                
module "clear yes"
cleankeys
power 0
sleep 2
power 1
sleep 2

record serial "$LOGFILE"        
debug "$BURST_RESULTS/burst_debug_$SYSTEST_HOST.log"
print "${BURST_HW}_ID_$logdate,$BURST_HW,$BURST_BUP,$BURST_ELF,$SYSTEST_HOST,$logdate1,$BURST_RUNTIME,xx,$PREEMPTABLE,IN_PROGRESS,TBD,$BURST_RESULTS,$BURST_HW.$BURST_BUP.$BURST_ELF.$SYSTEST_HOST.xx.TBD,$BURST_KNOBS"
print "Zynq Version    :$BURST_HW"
print "BUP Version     :$BURST_BUP"
print "FSBL_ELF        :$FSBL_ELF"
print "IOU INIT TCL    :$IOU_INIT_TCL"
print "DDR INIT tcl    :$DDR_INIT_TCL"
print "BOARD           :$SYSTEST_HOST"
print "BURST elf       :$BURST_ELF"
print "BURST runtime   :$BURST_RUNTIME seconds"
print "XSDB Version    :$WHICH_XSDB"
print "Job ID          :$LSB_JOBID"

read_dna

<::power_config:=: ::>

fork "xsdb" as my_xsdb
my_xsdb echo = 1

test
	sleep 5
	wait
	when my_xsdb matches "xsdb%"
		print "Forking xsdb completed"
		continue
	end
	after 2 minutes
		print "FAILURE: Forking xsdb failed"
                close
		exit
	end
endtest

#Perform initialising process for all cores
print my_xsdb "connect"
print my_xsdb "targets"        		# List all cores

# Take CPU's out of reset until fix        
print my_xsdb "targets -set -filter {name =~ \"PS8\"|| name =~ \"PSU\"}"   # Connect to DAP
<::__SUB_TEMPLATE__a53_rst__:=:No::>
<::__SUB_TEMPLATE__r5_rst__:=:No::>
print my_xsdb "stop"
print my_xsdb "targets"        

# Check if DDR init is performed in FSBL/Standalone        
print my_xsdb "dow $FSBL_ELF"
print my_xsdb "con"        
print my_xsdb "exec sleep 4"
print my_xsdb "stop"        
print my_xsdb "exec sleep 1"


if run "[ -f $BURST_BUP ]" then
	# Connect to hw server        
	print my_xsdb "fpga -f $BURST_BUP"
else
	print "No BUP to download, path: $BURST_BUP"
endif        
if run "[ -f $DDR_INIT_TCL ]" then        
	print my_xsdb "source $DDR_INIT_TCL"
else        
	print "FSBL will do DDR init"
endif

<::__SUB_TEMPLATE__r5_sleep2__:=:No::>

# Download BURST            
print my_xsdb "mrd 0x00100000 20"            
print my_xsdb "dow $BURST_ELF"            

test
        sleep 5
        wait
        when my_xsdb matches "Successfully downloaded .*burstarm.*"
                continue
        end
        when my_xsdb matches "Failed to download .*burstarm.*"
                fail "BURST elf download failed"
        end
        when my_xsdb inactive 2 minutes
                fail "BURST not started"
        end
        on failure
                print "FAILURE: $0"
                close
                exit
        end
endtest

print my_xsdb "mrd 0x00100000 20"
print my_xsdb "rrd"
<::preemption_on:=: ::>            
print my_xsdb "con"
print my_xsdb "exit"

