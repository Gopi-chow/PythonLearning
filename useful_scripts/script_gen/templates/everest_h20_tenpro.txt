<::com:=:serial::> baud=115200
<::com:=:serial::> txdelay=100

$BUILD_DIR = "<::build_dir:=:/group/siv4/proj/everest/public/releases/ipp/$BURST_HW::>"
$PDRPP_WORK = "<::pdrpp_work:=:$BUILD_DIR/run_dir/bup::>/pdrpp_work"
$PROTIUM_SCRIPT = "$BUILD_DIR/<::run_script:=:run.tcl::>"
$XSDB = "<::xsdb_ver:=:/proj/xbuilds/2019.2_INT_released/installs/lin64/Vivado/2019.2/bin/xsdb::>"
$XSDB_RC = "<::xsdbrc_path:=:/group/siv4/proj/everest/public/releases/spp/$BURST_HW/.xsdbrc::>"
$PDI_IMAGE = "<::image_path:=:$BUILD_DIR/run_dir::>/tenzing_se1_sivdef_ddr4single_hbm_wrapper.pdi"

# Unlock Protium
<::unlock_cmd:=:unlock::>
sleep 4

# Create log directories for host
$dir1 = "$SYSTEST_HOST"
run "mkdir -p $LOGPATH/$dir1"
$dir2 = "$logdate"
run "mkdir -p $LOGPATH/$SYSTEST_HOST/$dir2"
$BURST_RESULTS = "$LOGPATH/$SYSTEST_HOST/$dir2"
$SERIAL_LOG = "$BURST_RESULTS/burst_serial_$SYSTEST_HOST.log"
$DEBUG_LOG = "$BURST_RESULTS/burst_debug_$SYSTEST_HOST.log"

power 0
sleep 2
power 1
sleep 2
<::__SUB_TEMPLATE__vcc_aux_test__:=:No::>

record <::com:=:serial::> append $SERIAL_LOG
debug append $DEBUG_LOG

#Echo all paths and configurations
print "Printing all launch information..."
print "PROTIUM_$logdate,$BURST_HW,$PDRPP_WORK,$PDI_IMAGE,$BURST_ELF,$SYSTEST_HOST,$logdate1,$BURST_RUNTIME,xx,$PREEMPTABLE,IN_PROGRESS,TBD,$BURST_RESULTS,$BURST_KNOBS"
print "DA Version               :$BURST_HW"
print "BOARD                    :$SYSTEST_HOST"
print "PDRPP_WORK               :$PDRPP_WORK"
print "BURST KNOBS              :$BURST_KNOBS"
print "BURST run time           :$BURST_RUNTIME seconds"
print "BURST elf                :$BURST_ELF"
print "BURST results            :$BURST_RESULTS"
print "Job ID                   :$LSB_JOBID" 

# launch ptm
if running my_ptm then
        kill my_ptm
        sleep 1
endif

cd "$BURST_RESULTS"
module "use /everest/sivhw_bkup/tools/modulefiles"
<::ptm_ver:=: ::>

check_board
print "starting tenpro"
fork "ptmRun" as my_ptm
my_ptm echo = 1
$serial := "$CLUSTER_HOME/bin/protium_lookup"
sleep 3
print my_ptm "sys"
print my_ptm "system -set $serial -reserve <::reserve_count:=:2::>"
sleep 3

<::preemption_off:=: ::>
$ptm_exit_time := "expr $BURST_RUNTIME / 60 + 30"
print my_ptm "xeset idleExit $ptm_exit_time"
# launch xsdb
fork "$XSDB" as my_xsdb
my_xsdb echo = 1

test
        sleep 5
        wait
        when my_xsdb matches "xsdb%"
                print "Forking xsdb completed"
                continue
        end
        after 2 minutes
                fail "Forking xsdb failed"
        end
        on failure
                print "FAILURE: $0"
                #Clearing the FPGA's
                print my_ptm "clear"
                sleep 3
                print my_ptm "exit"
                <::unlock_cmd:=:unlock_4::>
                #Changing the current working directory
                cd "$BURST_HOME"
                close
                exit
        end
endtest
# Take <::proc::> out of reset and download BURST elf
#print my_xsdb "source $XSDB_RC"
print my_xsdb "connect"
print my_xsdb "global cable"
print my_xsdb "jtag targets"
print my_xsdb "targets"
print my_xsdb "target -set -filter {name =~ \"Versal*\"}"
sleep 5
<::__SUB_TEMPLATE__h20_ipp_noc_compiler_dow__:=:yes::>
print my_ptm "download $PDRPP_WORK"
test
	sleep 5
        wait
        when my_ptm matches "Info: Infra reset asserted"
                print "PTM download completed"
                continue
        end
        when my_ptm matches "Infra-Reset successfully completed"
                print "PTM download completed"
                continue
        end
	when my_ptm inactive 5 minutes
		fail "PTM download is too slow or error while downloading"
	end
        after 20 minutes
		fail "PTM dowload is taking more than 20 min"
	end
	on failure
		print "FAILURE: $0"
                #Clearing the FPGA's
                print my_ptm "clear"
                sleep 3
                print my_ptm "exit"
                <::unlock_cmd:=:unlock::>
                #Changing the current working directory
                cd "$BURST_HOME"
                close
                exit
        end
endtest
sleep 4
print my_ptm "source $PROTIUM_SCRIPT"
test
	sleep 5
	wait
	when my_ptm matches "run script finished"
		print "Sourcing Run script complete"
		continue
	end	
	when my_ptm inactive 1 minutes
		fail "Sourcing run script is too slow or error while downloading"
	end
        after 5 minutes
		fail "Sourcing run script is taking more than 5 min"
	end
	on failure
		print "FAILURE: $0"
                #Clearing the FPGA's
                print my_ptm "clear"
                sleep 3
                print my_ptm "exit"
                <::unlock_cmd:=:unlock::>
                #Changing the current working directory
                cd "$BURST_HOME"
                close
		exit
	end	
endtest



<::__SUB_TEMPLATE__spp_a72_ta_sel__:=:No::>
<::__SUB_TEMPLATE__r5_ta_sel__:=:No::>

print my_xsdb "<::rst_type::>"
sleep 60
print my_xsdb "puts \" PROTIUM TENZING LINK CHECK \" "
print my_xsdb "mrd -force 0x80000000"

print my_xsdb "puts \" Setting CAN0_REF_CTRL and CAN1_REF_CTRL \" "
print my_xsdb "mwr -force 0xff5e0138 0x02000603"
print my_xsdb "mwr -force 0xff5e013c 0x02000603"

test
	sleep 1
	wait
	when my_xsdb matches "80000000:   0000000F"
		print "TENZING and PROTIUM  LINKUP SUCCESSFUL"
		continue
	end
	when my_xsdb matches "80000000:   00000000"
		fail "TBUS LINKUP failed"
	end
	when my_xsdb inactive 2 minutes
		fail "No TBUS LINKUP after 2minutes"
	end
	on failure
		print "FAILURE: $0"
		#Clearing the FPGA's
		print my_ptm "clear"
		sleep 3
		print my_ptm "exit"
		unlock_4
		#Changing the current working directory
		cd "$BURST_HOME"
		close
		exit
	end
endtest
sleep 1

print my_xsdb "dow -skip-activate-subsystem -force $BURST_ELF"

test
	sleep 5
	wait
	when my_xsdb matches "Successfully downloaded .*burstarm.*"
		continue
	end
	when my_xsdb matches "Failed to download .*burstarm.*"
		fail "BURST elf download failed"
	end
	when my_xsdb inactive 2 minutes
		fail "BURST not started"
	end
	on failure
                print "FAILURE: $0"
                #Clearing the FPGA's
                print my_ptm "clear"
                sleep 3
                print my_ptm "exit"
                <::unlock_cmd:=:unlock::>
                #Changing the current working directory
                cd "$BURST_HOME"
                close
		exit
	end
endtest
<::preemption_on:=: ::>
print my_xsdb "con"
print my_xsdb "exit"
