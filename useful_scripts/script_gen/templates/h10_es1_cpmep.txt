if run "[ -f \"/exports/burst86 \" ]" then
  run "rm /exports/burst86"
endif
<::preemption_off:=: ::>
power 0
sleep 2
power 1 
sleep 2

$EP_PDI_IMAGE = "<::image_path:=:None::>"

# Create log directories for host
$logdate_time := 'date +%Y%m%d_%H%M'
$dir1 = "$SYSTEST_HOST"
run "mkdir -p $LOGPATH/$dir1"
$dir2 = "$logdate"
run "mkdir -p $LOGPATH/$SYSTEST_HOST/$dir2"
$BURST_RESULTS = "$LOGPATH/$SYSTEST_HOST/$dir2"
$BAUD_RATE = <::baud_rate:=:115200::>
<::com:=:serial::> baud = $BAUD_RATE
record <::com:=:serial::> "$BURST_RESULTS/burst_serial_$SYSTEST_HOST.log"
debug "$BURST_RESULTS/burst_debug_$SYSTEST_HOST.log"

#Echo all paths and configurations
print "Printing all launch information..."
print "Everest_$logdate,$BURST_HW,None,$EP_PDI_IMAGE,None,None,None,None,$BURST_ELF,$SYSTEST_HOST,$logdate1,$BURST_RUNTIME,xx,$PREEMPTABLE,IN_PROGRESS,TBD,$BURST_RESULTS,$BURST_KNOBS"

print "DA Version               :$BURST_HW"
print "EP_PDI Image             :$EP_PDI_IMAGE"
print "BOARD                    :$SYSTEST_HOST"
print "BURST KNOBS              :$BURST_KNOBS"
print "BURST elf                :$BURST_ELF"
print "BURST runtime            :$BURST_RUNTIME seconds"
print "BURST results            :$BURST_RESULTS"
print "Job ID                   :$LSB_JOBID"
<::board_serial_num:=: ::>

# launch xsdb
fork "xsdb" as my_xsdb
my_xsdb echo = 1

test
	sleep 5
	wait
	when my_xsdb matches "xsdb%"
		print "Forking xsdb completed"
		continue
	end
	after 2 minutes
		print "FAILURE: Forking xsdb failed"
                close
		exit
	end
endtest

print my_xsdb "connect"
print my_xsdb "targets"        		# List all cores
sleep 2

<::__SUB_TEMPLATE__h10_es1_cpm_ep_dow_x86__:=:No::>

sleep 5

print my_xsdb "exit"

tftpd
tftpd_burst
sleep 5

run "cp $BURST_ELF /exports/"
run "chmod 777 /exports/burst86"

sleep 10
reset_rc

<::preemption_on:=: ::>

